/**
* $direction - up, right, down (default), left
* $color - default: #000
* $size - the same size for all directions (default: 1em)
* arbitrary params:
* * size for every direction: $top, $right, $bottom, $left
**/
@mixin triangle($direction: 'down', $color: #000, $size: 1em, $top: null, $right: null, $bottom: null, $left: null){
  width: 0; height: 0;

  @for $i from 1 through 4 {
    $a: nth(map_get((down: 2 1 0 1, up: 0 1 2 1, left: 1 2 1 0, right: 1 0 1 2), $direction), $i);
    $b: nth($top $right $bottom $left, $i);
    $c: transparent;

    @if not $b { $b: $size; }
    @if $a == 2 { $c: $color; }
    @if $a != 0 { border-#{nth(top right bottom left, $i)}: $b solid $c; }
  }
}

@mixin itemWidth($maxQuantity: 10, $tag: li) {
  @for $i from 1 through $maxQuantity {
    #{$tag}:first-child:nth-last-child(#{$i}),
    #{$tag}:first-child:nth-last-child(#{$i}) ~ #{$tag} {
      width: #{100%/$i}
    }
  }
}

@mixin fontFace($name, $file) {
  $path: unquote('fonts/');

  @font-face {
    font-family: $name;
    src: url('#{$path}#{$file}.eot');
    src: url('#{$path}#{$file}.eot?#iefix') format('embedded-opentype'),
    url('#{$path}#{$file}.woff2') format('woff2'),
    url('#{$path}#{$file}.woff') format('woff'),
    url('#{$path}#{$file}.ttf') format('truetype'),
    url('#{$path}#{$file}.svg#open_sansregular') format('svg');
    font-weight: normal;
    font-style: normal;
  }
}

@mixin appearanceInput($type: none, $moz: undefined, $webkit: undefined) {
  -moz-appearance: if($moz != undefined, $moz, $type);
  -webkit-appearance: if($webkit != undefined, $webkit, $type);
  appearance: $type;
}

@mixin ellipsis {
  display: block;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

@mixin placeholder($el: input) {
  $a: '::-moz-' '::-webkit-input-' ':-ms-input-';
  @each $b in $a {
    #{$el}#{unquote($b + 'placeholder')} { @content }
  }
}
